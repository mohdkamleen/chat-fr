{"ast":null,"code":"var _jsxFileName = \"/home/mohd/Documents/Github/chat-fr/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:3000\"); // Connect to the backend\n\nconst App = () => {\n  _s();\n  const localVideoRef = useRef();\n  const remoteVideoRef = useRef();\n  const peerConnectionRef = useRef(null);\n  const [isInitiator, setIsInitiator] = useState(false);\n  const [remoteSocketId, setRemoteSocketId] = useState(\"\");\n  useEffect(() => {\n    socket.on(\"offer\", async data => {\n      if (!isInitiator) {\n        setRemoteSocketId(data.from);\n        await peerConnectionRef.current.setRemoteDescription(data.offer);\n        const answer = await peerConnectionRef.current.createAnswer();\n        await peerConnectionRef.current.setLocalDescription(answer);\n        socket.emit(\"answer\", {\n          to: data.from,\n          answer\n        });\n      }\n    });\n    socket.on(\"answer\", async data => {\n      await peerConnectionRef.current.setRemoteDescription(data.answer);\n    });\n    socket.on(\"ice-candidate\", async data => {\n      try {\n        await peerConnectionRef.current.addIceCandidate(data.candidate);\n      } catch (err) {\n        console.error(\"Error adding received ice candidate\", err);\n      }\n    });\n    return () => socket.disconnect();\n  }, [isInitiator]);\n  const startConnection = async () => {\n    const localStream = await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    });\n    localVideoRef.current.srcObject = localStream;\n    peerConnectionRef.current = new RTCPeerConnection();\n    localStream.getTracks().forEach(track => {\n      peerConnectionRef.current.addTrack(track, localStream);\n    });\n    peerConnectionRef.current.ontrack = event => {\n      remoteVideoRef.current.srcObject = event.streams[0];\n    };\n    peerConnectionRef.current.onicecandidate = event => {\n      if (event.candidate) {\n        socket.emit(\"ice-candidate\", {\n          to: remoteSocketId,\n          candidate: event.candidate\n        });\n      }\n    };\n    setIsInitiator(true);\n  };\n  const connectToUser = async socketId => {\n    setRemoteSocketId(socketId);\n    const offer = await peerConnectionRef.current.createOffer();\n    await peerConnectionRef.current.setLocalDescription(offer);\n    socket.emit(\"offer\", {\n      to: socketId,\n      from: socket.id,\n      offer\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Video Chat App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: localVideoRef,\n      autoPlay: true,\n      muted: true,\n      style: {\n        width: \"300px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: remoteVideoRef,\n      autoPlay: true,\n      style: {\n        width: \"300px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startConnection,\n      children: \"Start Video Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => connectToUser(prompt(\"Enter remote socket ID\")),\n      disabled: !isInitiator,\n      children: \"Connect to User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"nVL5L5cu3zUu0M0f/PJoSz6NpHM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","io","jsxDEV","_jsxDEV","socket","App","_s","localVideoRef","remoteVideoRef","peerConnectionRef","isInitiator","setIsInitiator","remoteSocketId","setRemoteSocketId","on","data","from","current","setRemoteDescription","offer","answer","createAnswer","setLocalDescription","emit","to","addIceCandidate","candidate","err","console","error","disconnect","startConnection","localStream","navigator","mediaDevices","getUserMedia","video","audio","srcObject","RTCPeerConnection","getTracks","forEach","track","addTrack","ontrack","event","streams","onicecandidate","connectToUser","socketId","createOffer","id","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","style","width","onClick","prompt","disabled","_c","$RefreshReg$"],"sources":["/home/mohd/Documents/Github/chat-fr/src/App.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:3000\"); // Connect to the backend\n\nconst App = () => {\n    const localVideoRef = useRef();\n    const remoteVideoRef = useRef();\n    const peerConnectionRef = useRef(null);\n\n    const [isInitiator, setIsInitiator] = useState(false);\n    const [remoteSocketId, setRemoteSocketId] = useState(\"\");\n\n    useEffect(() => {\n        socket.on(\"offer\", async (data) => {\n            if (!isInitiator) {\n                setRemoteSocketId(data.from);\n                await peerConnectionRef.current.setRemoteDescription(data.offer);\n                const answer = await peerConnectionRef.current.createAnswer();\n                await peerConnectionRef.current.setLocalDescription(answer);\n                socket.emit(\"answer\", {\n                    to: data.from,\n                    answer,\n                });\n            }\n        });\n\n        socket.on(\"answer\", async (data) => {\n            await peerConnectionRef.current.setRemoteDescription(data.answer);\n        });\n\n        socket.on(\"ice-candidate\", async (data) => {\n            try {\n                await peerConnectionRef.current.addIceCandidate(data.candidate);\n            } catch (err) {\n                console.error(\"Error adding received ice candidate\", err);\n            }\n        });\n\n        return () => socket.disconnect();\n    }, [isInitiator]);\n\n    const startConnection = async () => {\n        const localStream = await navigator.mediaDevices.getUserMedia({\n            video: true,\n            audio: true,\n        });\n        localVideoRef.current.srcObject = localStream;\n\n        peerConnectionRef.current = new RTCPeerConnection();\n        localStream.getTracks().forEach((track) => {\n            peerConnectionRef.current.addTrack(track, localStream);\n        });\n\n        peerConnectionRef.current.ontrack = (event) => {\n            remoteVideoRef.current.srcObject = event.streams[0];\n        };\n\n        peerConnectionRef.current.onicecandidate = (event) => {\n            if (event.candidate) {\n                socket.emit(\"ice-candidate\", {\n                    to: remoteSocketId,\n                    candidate: event.candidate,\n                });\n            }\n        };\n\n        setIsInitiator(true);\n    };\n\n    const connectToUser = async (socketId) => {\n        setRemoteSocketId(socketId);\n\n        const offer = await peerConnectionRef.current.createOffer();\n        await peerConnectionRef.current.setLocalDescription(offer);\n\n        socket.emit(\"offer\", {\n            to: socketId,\n            from: socket.id,\n            offer,\n        });\n    };\n\n    return (\n        <div>\n            <h1>Video Chat App</h1>\n            <video ref={localVideoRef} autoPlay muted style={{ width: \"300px\" }}></video>\n            <video ref={remoteVideoRef} autoPlay style={{ width: \"300px\" }}></video>\n\n            <button onClick={startConnection}>Start Video Chat</button>\n            <button\n                onClick={() => connectToUser(prompt(\"Enter remote socket ID\"))}\n                disabled={!isInitiator}\n            >\n                Connect to User\n            </button>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}